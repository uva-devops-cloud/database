name: Database Migration (Reusable)

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      aws_account_id:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  flyway-migrate:
    name: Run migrations for ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{inputs.aws_account_id}}:role/GitHubTerraformDeployRole
          role-session-name: GitHubFlywaySession
          aws-region: eu-west-2

      - name: Get DB info from AWS (if needed)
        run: |
          # Optional - get endpoint from AWS if not stored as secret
          # DB_ENDPOINT=$(aws rds describe-db-instances --db-instance-identifier student-portal-db --query 'DBInstances[0].Endpoint.Address' --output text)
          # echo "DB_ENDPOINT=$DB_ENDPOINT" >> $GITHUB_ENV
          
          # Optional - get password from secrets manager if not stored as GitHub secret
          # DB_PASSWORD=$(aws secretsmanager get-secret-value --secret-id studentportal-db-password-${{inputs.aws_account_id}} --query 'SecretString' --output text)
          # echo "::add-mask::$DB_PASSWORD"
          # echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV

      - name: Run Flyway migrations
        uses: flyway-actions/flyway@v2
        with:
          args: migrate
        env:
          FLYWAY_URL: "jdbc:postgresql://${{ secrets.DB_ENDPOINT }}:5432/studentportal"
          FLYWAY_USER: dbadmin
          FLYWAY_PASSWORD: ${{ secrets.DB_PASSWORD }}
          FLYWAY_LOCATIONS: "filesystem:./migrations"